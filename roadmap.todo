Apresentação do NODE:
    ✔ O que é: Plataforma que roda JavaScript @done
    ✔ O que faz @done
    ✔ Como ele faz @done
    ✔ Deno x Node @done

Estruturas de Controle:
    ✔ if() {} else {} @done(20-05-30 11:32)
    ✔ switch @done(20-05-30 12:03)
    ☐ try {} catch {}
    ✔ for @done(20-05-30 11:30)
    ✔ for in @done(20-05-30 11:30)
    ✔ for of @done(20-05-30 11:30)
    ✔ while @done(20-05-30 12:26)

// Node - Aula 2 - (6/6)
    Sistema de Módulos:

    ✔ Functions e arrow functions: @done(20-06-06 11:19)

    Objetos Literais + JSON:

    ✔ Callbacks: @done(20-06-06 11:19)

    Arrays e seus métodos:
        ✔ find @done(20-06-06 12:33)
        ☐ findIndex
        ✔ filter @done(20-06-06 12:33)
        ✔ map @done(20-06-13 10:50)
        ✔ reduce @done(20-06-13 11:46)
        ☐ forEach

// Node - Aula 3 - (20/6)
    NPM - Node Package Manager: Gerenciador de Pacotes:

    Arquitetura Cliente-Servidor:
        ✔ HTTP - estrutura de uma requisição/resposta @done(20-06-20 09:33)
        ✔ Estrutura MVC (Padrão de Desenho de Projeto) @done(20-06-20 10:52)
        ☐ Métodos HTTP (GET/POST/PUT/DELETE/PATCH)
        ☐ Express

            ✔ Configurar uma rota @done(20-06-20 10:55)
            const express = require('express');
            const router = express.Router();
            router.get('',()=>{});
            module.exports = router;

            ✔ Setup do Template Engine (ejs) @done(20-06-20 11:58)
            app.set('views', path.join(__dirname, 'views'));
            app.set('view engine', 'ejs');

            ✔ Pasta pública @done(20-06-20 11:58)
            app.use(express.static(path.join(__dirname, 'public')));
            
            ☐ As formas de envio de informações do cliente para o sevidor
            via GET, via POST, via Parâmetros de Rota

            ☐ Parsing de body
            app.use(express.json());
            app.use(express.urlencoded({ extended: false }));

            ☐ Criando um novo usuário

            ☐ Removendo um novo usuário
            Method override: app.use(methodOverride('_method'));

            ☐ Alterando um novo usuário

            

    Padrão MVC com Express:
        
        ☐ Template Engines (Views: EJS)
        ☐ Models (sequelize)
        ☐ Express Generator

Middlewares:

Libs Importantes:
    ☐ fs - Fyle System
    ☐ path
    ☐ bcrypt

Sessions (express-session) e Cookies (cookie-parser):

APIs:

